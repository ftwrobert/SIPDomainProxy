#!KAMAILIO -- config for SIPDomainProxy
################################################################################
# Title:  SIPDomainProxy
# Author: Robert J. Ebel
################################################################################



################################################################################
# Routing Blocks (lookupsubscriber)
################################################################################

route[LOOKUP_SUBSCRIBER] {
  #!ifdef TESTBED_MODE
  xlog("L_DBG", "route: ROUTING\n");
  #!endif
  # Requests from PBX -> UAC
  if (src_ip == "PRIVSUBNET/PRIVMASK") {
    # !FIXME! Look up DID and find subscriber list
    # look up the UAC binding
    # Determine if this proxy is responsible for registration. If so, we'll need
    # to map DID's to a registration, otherwise, we pass through.

    switch($avp(dattr_authtype)) {
      case "passthrough":
        # nothing complicated, verify we know about the end point before relay
        if (!lookup("location")) {
            xlog("L_NOTICE", "Passthrough contact is not registered\n");
            sl_send_reply("404", "Not Found");
            exit;
        }
        xlog("L_NOTICE", "Passthrough contact has been resolved, $ru\n");
        return;
      case "registration":
        # "Look up DID"
        # Save the Request User, alias_db_lookup() will update this. We want to
        # restore it when we are down finding the subscriber.
        $var(orig_ru) = $rU;
        # If there are DID's, find the real subscriber
        alias_db_lookup("dbaliases");
        # look up the subscriber so we may route to them
        if (!lookup("location")) {
          # subscriber not found in location table, is there a IP route we can
          # take to reach the customer?
          xlog("L_NOTICE", "Registration subscriber not found\n");
          send_reply("404", "Not Found");
          exit;
        }
        $rU = $var(orig_ru);
      default:
        xlog("L_NOTICE", "Domain attribute failure (authtype)\n");
        sl_send_reply("500", "Internal Server Error");
        exit;
    }
    if (subst('/Contact: <sip:(.*)@(.*)$/Contact: <sip:\1@$fd\r/ig')) {
      xlog("L_NOTICE", "Updated Contact, set domain to $fd\n");
    }
    return;
  }
  # Requests from UAC -> PBX
  else {
    # Update the request domain and port to relay to the PBX
    $rd = $(avp(dattr_pbx_addr));
    $rp = $(avp(dattr_pbx_sipport));

    # !FIXME! setting the contact's domain to $fd may mean the PBX routes to
    # it's default gateway and that routes back to this proxy via hairpin nat
    # If so, this IS NOT desirable -- would we be able to get away with setting
    # the domain to PRIVADDR?
    # If we "can", we may then need to update the domain before looking up the
    # subscribers location.
    if (subst('/Contact: <sip:(.*)@(.*)$/Contact: <sip:\1@$fd\r/ig')) {
      xlog("L_NOTICE", "Updated Contact, set domain to $fd:$rp\n");
    }
    return;
  }
  # If we're still here, something went wrong :/
  sl_send_reply("500", "Internal Server Error");
  exit;
}
