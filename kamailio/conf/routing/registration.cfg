#!KAMAILIO -- config for SIPDomainProxy
################################################################################
# Title:  SIPDomainProxy
# Author: Robert J. Ebel
################################################################################



################################################################################
# Routing Blocks (authentication)
################################################################################

route[REGISTRATION] {
#!ifdef TESTBED_MODE
xlog("L_INFO", "branch_route: REGISTRATION\n");
#!endif
  if (method=="REGISTER" && src_ip != "PRIVSUBNET/PRIVMASK") {
    switch($avp(dattr_authtype)) {
      case "passthrough":
        route(PASSTHROUGH_REGISTRATION);
        exit;
      case "registration":
        route(KAMAILIO_REGISTRATION);
        return;
      default:
        xlog("L_NOTICE", "Domain attribute failure (authtype)\n");
        sl_send_reply("500", "Internal Server Error");
        exit;
    }
  }
}

route[PASSTHROUGH_REGISTRATION] {
#!ifdef TESTBED_MODE
xlog("L_INFO", "branch_route: PASSTHROUGH_REGISTRATION\n");
#!endif
  # Save the location but do not reply. We'll pass this to the PBX.
  if (!save("location", "0x06")) {
    sl_reply_error();
  }

  # Update the request domain and port to relay to the PBX
  $rd = $(avp(dattr_pbx_addr));
  $rp = $(avp(dattr_pbx_sipport));

  # Add a Path header so we can route replies back to the UAC
  add_path_received($fU);

  if (subst_hf("Contact", "/<sip:(.*)@(.*)>/<sip:\1@$fd>/ig", "a")) {
    xlog("L_NOTICE", "Updated Contact, set domain to $fd\n");
  }

  route(RELAY);
  exit;
}

route[KAMAILIO_REGISTRATION] {
#!ifdef TESTBED_MODE
xlog("L_INFO", "branch_route: KAMAILIO_REGISTRATION\n");
#!endif
  # Statefull mode required for nonce protection
  t_lookup_request();

  if (!www_authenticate("$td", "subscriber")) {
    route(AUTH_DB_RETCODE);
    www_challenge("$td", "1");
    t_release();
    exit;
  }
  # Credentials verified.
  xlog("L_NOTICE", "Authentication Credentials verified\n");

  if (search_hf("Contact", ";expires=0", "f")) {
    xlog("L_NOTICE", "$tu requested immediate expiration of registration\n");
  }

  # Do not pass credentials to upstream domain
  consume_credentials();

  # This flag is used for NAT Keep-Alive
  setbflag("7");

  if (!save("location")) {
    xlog("L_NOTICE", "Failed to save binding\n");
    send_reply("503", "Service Unavailable");
    exit;
  }

  xlog("L_NOTICE", "Registration binding ($ct) saved for $tU@$td\n");

  # !FIXME! Do we need to manually send back a 200 OK?
  # If so, do we need to exit execution here?

}
