#!KAMAILIO -- config for SIPDomainProxy
################################################################################
# Title:  SIPDomainProxy
# Author: Robert J. Ebel
################################################################################



################################################################################
# Routing Blocks (request_route)
################################################################################

request_route {
#!ifdef TESTBED_MODE
xlog("L_INFO", "request_route\n");
#!endif

  # Sanity checks
  if (!maxfwd_process("10") && $retcode==-1) {
    sl_send_reply("483", "Too Many Hops");
    xlog("L_NOTICE", "Too Many Hops for $si $rm $ru\n");
    exit;
  }
  if (!sanity_check()) {
    xlog("L_NOTICE", "Sanity Check failed for $si\n");
    exit;
  }

  # We are requiring domain routing.
  if (!  (   lookup_domain("$rd", "dattr_")
          || lookup_domain("$td", "dattr_")
          || src_ip == "PRIVSUBNET/PRIVMASK")
      ) {
    xlog("L_NOTICE", "Domain Check failed for $si" +
                     " -- Domain '$td' not found in domain table\n");
    # For now, we're going to just drop these request.. nothing to see here!!
    drop();
  }

  if (method=="CANCEL") {
    route(HANDLE_RTP);
    if (!t_relay_cancel()) {
      xlog("L_NOTICE", "An error occurred in relaying a CANCEL\n");
      sl_send_reply("500", "Internal Server Error");
      exit;
    }
    exit;
  }

  route(IN_DIALOG_REQEST);

  # handle retransmissions
  if(t_precheck_trans()) {
    t_check_trans();
    exit;
  }
  t_check_trans();

  route(AUTHENTICATION);

  # Reply to OPTIONS messages
  # !FIXME! A proxy determines if an OPTIONS request is for itself by examining
  #   the Request-URI. Otherwise the request is forwarded.
  if (method=="OPTIONS") {
    sl_send_reply("200", "OK");
    exit;
  }

  route(RECORD_ROUTE);
  route(DETECT_NAT);
  route(REGISTRATION);

  # ACK|NOTIFY are sent within dialog and should be relayed there.
  if (is_method("ACK|NOTIFY")) {
    xlog("L_NOTICE", "Out of Dialog ACK|NOTIFY from $si\n");
    drop();
  }

  # Find the endpoint that we need to relay to.
  route(LOOKUP_SUBSCRIBER);
  route(HANDLE_RTP);
  route(RELAY);
}
