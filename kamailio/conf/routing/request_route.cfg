#!KAMAILIO -- config for SIPDomainProxy
################################################################################
# Title:  SIPDomainProxy
# Author: Robert J. Ebel
################################################################################



################################################################################
# Routing Blocks (request_route)
################################################################################

request_route {
#!ifdef TESTBED_MODE
xlog("L_INFO", "request_route\n");
#!endif

  # If there is not Max-Forward header, create one with a value of 10
  # If there is one, decrement it by one
  # If the Max-Forward header is zero, execute the following block
  if (!maxfwd_process("10") && $retcode==-1) {
    sl_send_reply("483", "Too Many Hops");
    xlog("L_NOTICE", "Too Many Hops for $si $rm $ru\n");
    exit;
  }

  # Stop the processing of bad-formed SIP requests at the edge of the network
  # http://kamailio.org/docs/modules/5.2.x/modules/sanity.html
  if (!sanity_check()) {
    xlog("L_NOTICE", "Sanity Check failed for $si\n");
    exit;
  }

  route(DETERMINE_DOMAIN);

  if (method=="CANCEL") {
    route(HANDLE_RTP);
    # t_relay_cancel will forward the CANCEL if there is a corresponding INVITE
    if (!t_relay_cancel()) {
      xlog("L_NOTICE", "An error occurred in relaying a CANCEL\n");
      sl_send_reply("500", "Internal Server Error");
      exit;
    }
    exit;
  }

  # If a call is already established, we can skip a few AAA
  route(IN_DIALOG_REQEST);

  # catch and drop retransmissions before a new transaction is created
  if(t_precheck_trans()) {
    xlog("L_INFO", "Retransmission detected\n");
    t_check_trans();
    exit;
  }
  t_check_trans();

  route(AUTHENTICATION);

  # Reply to OPTIONS messages
  # !FIXME! A proxy determines if an OPTIONS request is for itself by examining
  #   the Request-URI. Otherwise the request is forwarded.
  if (method=="OPTIONS") {
    sl_send_reply("200", "OK");
    exit;
  }

  route(RECORD_ROUTE);
  route(DETECT_NAT);
  route(REGISTRATION);

  # ACK|NOTIFY are sent within dialog and should be relayed there.
  if (is_method("ACK|NOTIFY")) {
    xlog("L_NOTICE", "Out of Dialog ACK|NOTIFY from $si\n");
    drop();
  }

  # Find the endpoint that we need to relay to.
  route(LOOKUP_SUBSCRIBER);
  route(HANDLE_RTP);
  route(RELAY);
}
